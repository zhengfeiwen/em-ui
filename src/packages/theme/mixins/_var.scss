@use 'sass:map';

@use 'config';
@use 'function' as *;
@use '../common/var' as *;

@mixin set-css-color-type-light($type, $i) {
  --em-color-#{$type}-light-#{$i}: #{map.get($colors, $type, 'light-#{$i}')};
}

@mixin set-css-color-type($type) {
  --em-color-#{$type}: #{map.get($colors, $type, 'base')};
  @each $i in (3, 5, 7, 8, 9) {
    @include set-css-color-type-light($type, $i);
  }
  --em-color-#{$type}-dark-2: #{map.get($colors, $type, 'dark-2')};
}

@mixin set-css-var-type($name, $type, $variables) {
  --em-#{$name}-#{$type}: #{map.get($variables, $type)};
}

// set all css var for component by map
@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    --em-#{$name}-#{$attribute}: #{$value};
  }
}

@mixin set-css-color-rgb($type) {
  $color: map.get($colors, $type, 'base');
  --em-color-#{$type}-rgb: #{red($color)}, #{green($color)}, #{blue($color)};
}

// generate css var from existing css var
// for example:
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --em-button-text-color: var(--em-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}
